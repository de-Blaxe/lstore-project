# NOTES: 
# Concurrent Reads + Writes
# Actual code due later, but still need to figure out logic (for Presentation)

# TODO #1
- Updating commmitted Base Record's Indirection (ptr to latest TID)
- Need to account for TIDs made by an ABORTED Thread/Transaction
- So far, we're marking TIDs made as invalid (storing them into Table's invalid_rids list)
- Problem: Corresponding (& committed) Base Record's Indirection may point to an invalid TID!
- Idea (?):
  * Have Log per Table
  * Log 3 Entries: BaseRID | Speculative Indirection | Committed Indirection
  * OR... Add metadata column for Speculative Indirection
    -> All queries read from Committed Indirection
    -> Once Transaction commits (i.e., all queries succeed), 'update' Log somehow?
    -> But... Transaction doesn't have access to Table instance?
